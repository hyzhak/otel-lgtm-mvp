apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: loki-data
  labels:
    app.kubernetes.io/name: loki
    app.kubernetes.io/part-of: otel-lgtm-mvp
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 10Gi
  volumeMode: Filesystem
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: loki
  labels:
    app.kubernetes.io/name: loki
    app.kubernetes.io/part-of: otel-lgtm-mvp
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: loki
      app.kubernetes.io/part-of: otel-lgtm-mvp
  template:
    metadata:
      labels:
        app.kubernetes.io/name: loki
        app.kubernetes.io/part-of: otel-lgtm-mvp
    spec:
      containers:
        - name: loki
          image: grafana/loki:3.5.0
          imagePullPolicy: IfNotPresent
          args:
            - "-config.file=/etc/loki/config/loki-config.yml"
          ports:
            - containerPort: 3100
              name: http
          volumeMounts:
            - name: loki-config
              mountPath: /etc/loki/config
              readOnly: true
            - name: loki-data
              mountPath: /loki
      volumes:
        - name: loki-config
          configMap:
            name: loki-config
        - name: loki-data
          persistentVolumeClaim:
            claimName: loki-data
---
apiVersion: v1
kind: Service
metadata:
  name: loki
  labels:
    app.kubernetes.io/name: loki
    app.kubernetes.io/part-of: otel-lgtm-mvp
spec:
  type: ClusterIP
  selector:
    app.kubernetes.io/name: loki
    app.kubernetes.io/part-of: otel-lgtm-mvp
  ports:
    - name: http
      port: 3100
      targetPort: http
